{"ast":null,"code":"var _jsxFileName = \"/home/devcambo/IdeaProjects/expr-SpringCloudAwsS3/src/main/frontend/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Form, Button, Alert, ProgressBar } from 'react-bootstrap';\nimport { useFileContext } from '../context/FileContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const {\n    uploadFile,\n    loading,\n    error\n  } = useFileContext();\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setUploadSuccess(false);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      return;\n    }\n\n    // Simulate upload progress\n    const progressInterval = setInterval(() => {\n      setUploadProgress(prevProgress => {\n        const newProgress = prevProgress + 10;\n        return newProgress >= 90 ? 90 : newProgress;\n      });\n    }, 300);\n    const success = await uploadFile(selectedFile);\n    clearInterval(progressInterval);\n    if (success) {\n      setUploadProgress(100);\n      setUploadSuccess(true);\n      setSelectedFile(null);\n\n      // Reset progress after a delay\n      setTimeout(() => {\n        setUploadProgress(0);\n      }, 2000);\n    } else {\n      setUploadProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h5\",\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleUpload,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleFileChange,\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Choose a file to upload to S3 bucket.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          className: \"mb-3\",\n          now: uploadProgress,\n          label: `${uploadProgress}%`,\n          variant: uploadProgress === 100 ? \"success\" : \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: \"File uploaded successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: !selectedFile || loading,\n          className: \"w-100\",\n          children: loading ? 'Uploading...' : 'Upload File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"w+iOgLICKzrqUNplWJlHSs72uTc=\", false, function () {\n  return [useFileContext];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Card","Form","Button","Alert","ProgressBar","useFileContext","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadSuccess","setUploadSuccess","uploadFile","loading","error","handleFileChange","e","target","files","handleUpload","preventDefault","progressInterval","setInterval","prevProgress","newProgress","success","clearInterval","setTimeout","className","children","Header","as","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSubmit","Group","Label","Control","type","onChange","disabled","Text","now","label","variant","_c","$RefreshReg$"],"sources":["/home/devcambo/IdeaProjects/expr-SpringCloudAwsS3/src/main/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Form, Button, Alert, ProgressBar } from 'react-bootstrap';\nimport { useFileContext } from '../context/FileContext';\n\nconst FileUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const { uploadFile, loading, error } = useFileContext();\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n    setUploadSuccess(false);\n  };\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    \n    if (!selectedFile) {\n      return;\n    }\n    \n    // Simulate upload progress\n    const progressInterval = setInterval(() => {\n      setUploadProgress((prevProgress) => {\n        const newProgress = prevProgress + 10;\n        return newProgress >= 90 ? 90 : newProgress;\n      });\n    }, 300);\n    \n    const success = await uploadFile(selectedFile);\n    \n    clearInterval(progressInterval);\n    \n    if (success) {\n      setUploadProgress(100);\n      setUploadSuccess(true);\n      setSelectedFile(null);\n      \n      // Reset progress after a delay\n      setTimeout(() => {\n        setUploadProgress(0);\n      }, 2000);\n    } else {\n      setUploadProgress(0);\n    }\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header as=\"h5\">Upload File</Card.Header>\n      <Card.Body>\n        <Form onSubmit={handleUpload}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Select File</Form.Label>\n            <Form.Control \n              type=\"file\" \n              onChange={handleFileChange}\n              disabled={loading}\n            />\n            <Form.Text className=\"text-muted\">\n              Choose a file to upload to S3 bucket.\n            </Form.Text>\n          </Form.Group>\n          \n          {uploadProgress > 0 && (\n            <ProgressBar \n              className=\"mb-3\" \n              now={uploadProgress} \n              label={`${uploadProgress}%`} \n              variant={uploadProgress === 100 ? \"success\" : \"primary\"}\n            />\n          )}\n          \n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {uploadSuccess && <Alert variant=\"success\">File uploaded successfully!</Alert>}\n          \n          <Button \n            variant=\"primary\" \n            type=\"submit\" \n            disabled={!selectedFile || loading}\n            className=\"w-100\"\n          >\n            {loading ? 'Uploading...' : 'Upload File'}\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}